{"openapi":"3.1.0","info":{"title":"StrataFi","description":"StrataFi API","version":"v3.7.6"},"servers":[{"url":"https://stratafi-api-dev.strata.win"}],"paths":{"/addresses/":{"get":{"tags":["address"],"summary":"Get Addresses","description":"Query addresses using different attributes for an address.","operationId":"get_addresses","parameters":[{"required":false,"schema":{"$ref":"#/components/schemas/AddressType"},"name":"type","in":"query"},{"required":false,"schema":{"type":"string","title":"Zone Id"},"name":"zone_id","in":"query"},{"required":false,"schema":{"type":"string","title":"Line1"},"name":"line1","in":"query"},{"required":false,"schema":{"type":"string","title":"Line2"},"name":"line2","in":"query"},{"required":false,"schema":{"type":"string","title":"City"},"name":"city","in":"query"},{"required":false,"schema":{"$ref":"#/components/schemas/StateEnum"},"name":"state","in":"query"},{"required":false,"schema":{"type":"string","title":"Zip"},"name":"zip","in":"query"},{"required":false,"schema":{"type":"string","title":"Lat"},"name":"lat","in":"query"},{"required":false,"schema":{"type":"string","title":"Lon"},"name":"lon","in":"query"},{"required":false,"schema":{"type":"string","title":"Drop Id"},"name":"drop_id","in":"query"},{"required":false,"schema":{"type":"string","title":"Network Id"},"name":"network_id","in":"query"},{"required":false,"schema":{"type":"boolean","title":"For Testing"},"name":"for_testing","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Has Gateway"},"name":"has_gateway","in":"query"},{"required":false,"schema":{"type":"boolean","title":"In Service"},"name":"in_service","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Is Verified"},"name":"is_verified","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Has Drop"},"name":"has_drop","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Ready"},"name":"ready","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Has Ont"},"name":"has_ont","in":"query"},{"required":false,"schema":{"type":"integer","minimum":1.0,"title":"Page","default":1},"name":"page","in":"query"},{"required":false,"schema":{"type":"integer","maximum":100.0,"minimum":1.0,"title":"Size","default":50},"name":"size","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_Address_"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["address_read"]},{"APIKeyHeader":[]}]}},"/addresses/available":{"get":{"tags":["address"],"summary":"Get Available Addresses","description":"Get addresses available for subscriptions.\n\nPermissions: address_read\n\n\n\nQueries:\n\n    network(str | None): Id of network to query. Defaults to None","operationId":"get_available_addresses","parameters":[{"required":false,"schema":{"type":"string","title":"Network"},"name":"network","in":"query"},{"required":false,"schema":{"type":"integer","minimum":1.0,"title":"Page","default":1},"name":"page","in":"query"},{"required":false,"schema":{"type":"integer","maximum":100.0,"minimum":1.0,"title":"Size","default":50},"name":"size","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_Address_"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["address_read"]},{"APIKeyHeader":[]}]}},"/address/{address_id}":{"get":{"tags":["address"],"summary":"Get Address By Id","description":"Get Address data by ID\n\nArgs:\n    id (UUID): Address ID","operationId":"get_address_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Address Id"},"name":"address_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["address_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["address"],"summary":"Update Address","description":"Update address details.\n\nArgs:\n\n    id (UUID):  Address ID\n\n    address_data (AddressUpdate): See schema for more details on required fields.\n\n\nPrivileges Required:\n\n    address_update\n\nScope Required:\n\n    Operator\n\nReturn:\n\n    Address: Full address object. See successful response for more details.","operationId":"update_address","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Address Id"},"name":"address_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddressUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["address_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["address"],"summary":"Delete Address","description":"Deletes an address\n\nArgs:\n    id (UUID): Address ID","operationId":"delete_address","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Address Id"},"name":"address_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["address_delete"]},{"APIKeyHeader":[]}]}},"/address/network/{address_id}":{"get":{"tags":["address"],"summary":"Get Network By Address Id","operationId":"get_network_by_address_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Address Id"},"name":"address_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["address_read","network_read"]},{"APIKeyHeader":[]}]}},"/address":{"post":{"tags":["address"],"summary":"Create Address","description":"Creates a new Address\n\n\nArgs:\n\n    address_data (AddressCreate): See schema for more details on required fields.\n\nReturns:\n\n    list[Address]: List of created addresses. See successful response for example object.","operationId":"create_address","requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AddressCreate"},"type":"array","title":"Address Data"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Address"},"type":"array","title":"Response Create Address"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["address_create"]},{"APIKeyHeader":[]}]}},"/login":{"post":{"tags":["auth"],"summary":"User Login","operationId":"user_login","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_user_login"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api_key":{"get":{"tags":["auth"],"summary":"Get Api Keys","operationId":"get_api_keys","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ApiKey"},"type":"array","title":"Response Get Api Keys"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":[]},{"APIKeyHeader":[]}]},"post":{"tags":["auth"],"summary":"Create Api Key","operationId":"create_api_key","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":[]},{"APIKeyHeader":[]}]}},"/api_key/{id}":{"delete":{"tags":["auth"],"summary":"Delete Api Key","operationId":"delete_api_key","parameters":[{"required":true,"schema":{"type":"string","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]},{"APIKeyHeader":[]}]}},"/devices/":{"get":{"tags":["device"],"summary":"Get Devices","description":"Gets all Device data","operationId":"get_devices","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Device"},"type":"array","title":"Response Get Devices"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["device_read"]},{"APIKeyHeader":[]}]}},"/device/{id}":{"get":{"tags":["device"],"summary":"Get Device By Id","description":"Get Device data by ID\n\nArgs:\n    id (UUID): Device ID","operationId":"get_device_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["device_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["device"],"summary":"Update Device","description":"Updates a user\n\nArgs:\n    id (UUID):  Device ID\n    device_data (DeviceUpdate): See schema for more details on required fields.","operationId":"update_device","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["device_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["device"],"summary":"Delete Device","description":"Deletes an device\n\nArgs:\n    id (UUID): Device ID","operationId":"delete_device","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["device_delete"]},{"APIKeyHeader":[]}]}},"/device":{"post":{"tags":["device"],"summary":"Create Device","description":"Creates a new Device\n\nArgs:\n    device_data (DeviceCreate): See schema for more details on required fields.","operationId":"create_device","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["device_create"]},{"APIKeyHeader":[]}]}},"/device/reboot/{subscription_id}":{"put":{"tags":["device"],"summary":"Reboot Device","description":"Reboot an ONT device by subscription id.\n\nPermissions:\n\n    device_update\n\nArgs:\n\n    subscription_id (UUID):  ID of subscription to reboot device\n\nReturns:\n\n    {\"success\": \"true\"}","operationId":"reboot_device","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["device_update"]},{"APIKeyHeader":[]}]}},"/device/summary/{subscription_id}":{"get":{"tags":["device"],"summary":"Get Device Report","description":"Get ONT report on device stats.\n\n\nPermissions: subscription_read","operationId":"get_device_report","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceReport"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["subscription_read"]},{"APIKeyHeader":[]}]}},"/drop/{address_id}":{"get":{"tags":["drop"],"summary":"Get Full Drop By Address Id","description":"Get full drop details by address id.\n\n# Permissions:\n- `drop_read`\n\n# Args:\n- `address_id (UUID)` Address id to get drop details for.\n\n# Returns:\n- `FullDropOut` Full drop details including address, drop, and drop log.","operationId":"get_full_drop_by_address_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Address Id"},"name":"address_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FullDropOut"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["drop_read"]},{"APIKeyHeader":[]}]}},"/drop":{"post":{"tags":["drop"],"summary":"Add New Drops","description":"Add new drops to the database, associate them with addresses, and create a log for each address associated.\n\n# Permissions:\n- `drop_create`\n\n# Args:\n- `drops (list[DropIn])` List of drop data used to create the drop.\n\n# Returns:\n- `list[Drop]` List of data reflecting drop data in database.","operationId":"add_new_drops","requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DropIn"},"type":"array","title":"Drops"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Drop"},"type":"array","title":"Response Add New Drops"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["drop_create"]},{"APIKeyHeader":[]}]}},"/drop/{address_id}/{event}":{"put":{"tags":["drop"],"summary":"Update Drop Status By Address Id","description":"Update a drops status by events.\n\n# Permissions:\n- `drop_update`\n\n# Args:\n- `address_id (UUID)` Id of address associated with drop.\n\n- `event (DropLogEventEnum)` Event to apply to drop.\n    - ## Operator:\n        - `eng_approve` Engineering approves drop location.\n\n        - `eng_deny` Engineering denies drop location.\n    - ## ISP:\n        - `isp_propose` ISP proposes a new drop location.\n\n        - `isp_revert` ISP reverts to and accepts original drop location.\n- `update_data (UpdateDropEvent)` Notes for the event. `lat` and `lon` are required if making a proposal\n\n# Returns:\n- `FullDropOut` see schema for details.","operationId":"update_drop_status_by_address_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Address Id"},"name":"address_id","in":"path"},{"required":true,"schema":{"$ref":"#/components/schemas/DropLogEventEnum"},"name":"event","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateDropEvent"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FullDropOut"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"406":{"description":"Event Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"423":{"description":"Drop already approved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["drop_update"]},{"APIKeyHeader":[]}]}},"/isps/":{"get":{"tags":["isp"],"summary":"Get Isps","description":"Gets all Isp data","operationId":"get_isps","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Isp"},"type":"array","title":"Response Get Isps"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["isp_read"]},{"APIKeyHeader":[]}]}},"/isp/{isp_id}":{"get":{"tags":["isp"],"summary":"Get Isp By Id","description":"Get Isp data by ID\n\nArgs:\n    id (UUID): Isp ID","operationId":"get_isp_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Isp Id"},"name":"isp_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Isp"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["isp_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["isp"],"summary":"Update Isp","description":"Updates a user\n\nArgs:\n    id (UUID):  Isp ID\n    isp_data (IspUpdate): See schema for more details on required fields.","operationId":"update_isp","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Isp Id"},"name":"isp_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IspUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Isp"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["isp_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["isp"],"summary":"Delete Isp","description":"Deletes an isp\n\nArgs:\n    id (UUID): Isp ID","operationId":"delete_isp","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Isp Id"},"name":"isp_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["isp_delete"]},{"APIKeyHeader":[]}]}},"/isp":{"post":{"tags":["isp"],"summary":"Create Isp","description":"Creates a new Isp\n\nArgs:\n    isp_data (IspCreate): See schema for more details on required fields.","operationId":"create_isp","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IspCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Isp"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["isp_create"]},{"APIKeyHeader":[]}]}},"/networks/":{"get":{"tags":["network"],"summary":"Get Networks","description":"Gets all Network data","operationId":"get_networks","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Network"},"type":"array","title":"Response Get Networks"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["network_read"]},{"APIKeyHeader":[]}]}},"/network/{id}":{"get":{"tags":["network"],"summary":"Get Network By Id","description":"Get Network data by ID\n\nArgs:\n    id (str): Network ID","operationId":"get_network_by_id","parameters":[{"required":true,"schema":{"type":"string","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Network"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["network_read"]},{"APIKeyHeader":[]}]},"delete":{"tags":["network"],"summary":"Delete Network","description":"Deletes an network\n\nArgs:\n    id (str): Network ID","operationId":"delete_network","parameters":[{"required":true,"schema":{"type":"string","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["network_delete"]},{"APIKeyHeader":[]}]}},"/network":{"post":{"tags":["network"],"summary":"Create Network","description":"Creates a new Network\n\nArgs:\n    network_data (NetworkCreate): See schema for more details on required fields.","operationId":"create_network","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Network"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["network_create"]},{"APIKeyHeader":[]}]}},"/network/{network_id}":{"put":{"tags":["network"],"summary":"Update Network","description":"Update an existing network.\n\n\nRoute is only usable by an Operator. All other scopes will receive a 401.\n\nWebhook data will create a new network and return the ID with the network object.\nTo update the webhook use the update webhook route.\n\nParameters:\n\n    network_id (str): The ID of the network to update.\n\n    network_data (NetworkUpdate): The updated network data.\n\n    current_user (User): The current authenticated user. Required scopes: \"network_update\"\n\n\nReturns:\n\n    Network: The updated network.","operationId":"update_network","parameters":[{"required":true,"schema":{"type":"string","title":"Network Id"},"name":"network_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Network"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["network_update"]},{"APIKeyHeader":[]}]}},"/network/isp":{"post":{"tags":["network"],"summary":"Add Isp To Network","operationId":"add_isp_to_network","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkIspLink"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["network_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["network"],"summary":"Remove Isp From Network","operationId":"remove_isp_from_network","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkIspLinkDelete"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["network_delete"]},{"APIKeyHeader":[]}]}},"/operators/":{"get":{"tags":["operator"],"summary":"Get Operators","description":"Gets all Operator data","operationId":"get_operators","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Operator"},"type":"array","title":"Response Get Operators"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["operator_read"]},{"APIKeyHeader":[]}]}},"/operator/{id}":{"get":{"tags":["operator"],"summary":"Get Operator By Id","description":"Get Operator data by ID\n\nArgs:\n    id (UUID): Operator ID","operationId":"get_operator_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["operator_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["operator"],"summary":"Update Operator","description":"Updates a user\n\nArgs:\n    id (UUID):  Operator ID\n    operator_data (OperatorUpdate): See schema for more details on required fields.","operationId":"update_operator","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OperatorUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["operator_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["operator"],"summary":"Delete Operator","description":"Deletes an operator\n\nArgs:\n    id (UUID): Operator ID","operationId":"delete_operator","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["operator_delete"]},{"APIKeyHeader":[]}]}},"/operator":{"post":{"tags":["operator"],"summary":"Create Operator","description":"Creates a new Operator\n\nArgs:\n    operator_data (OperatorCreate): See schema for more details on required fields.","operationId":"create_operator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OperatorCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["operator_create"]},{"APIKeyHeader":[]}]}},"/orders/{subscription_id}":{"get":{"tags":["order"],"summary":"Get Subscription Orders","description":"Get a list of orders for a subscription.\n\n# Permissions:\n- `order_read`\n\n# Args:\n- `subscription_id (UUID)` ID of the subscription you want order for. **Required**\n\n- `operation (OrderOperationEnum | None, optional)` The operation to filter orders by. Defaults to None.\n- `active_orders_only (bool | None, optional)` Whether to only return active orders. Defaults to None.\n\n# Returns:\n- `list[Order]` A list of orders matching the query. See Schema for details.","operationId":"get_subscription_orders","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"path"},{"required":false,"schema":{"$ref":"#/components/schemas/OrderOperationEnum"},"name":"operation","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Active Orders Only"},"name":"active_orders_only","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Order"},"type":"array","title":"Response Get Subscription Orders"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["order_read"]},{"APIKeyHeader":[]}]}},"/order/{order_id}":{"get":{"tags":["order"],"summary":"Get Order By Id","description":"Get an order by ID.\n\n# Permissions:\n- `order_read`\n\n# Args:\n- `order_id` UUID of the order\n\n# Returns:\n- `Order` see Schema for details.","operationId":"get_order_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Order Id"},"name":"order_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["order_read"]},{"APIKeyHeader":[]}]}},"/order/{order_id}/user":{"get":{"tags":["order"],"summary":"Get User That Created Order","description":"Get the user who created the specified order.\n\n# Permissions:\n- `order_read`\n\n# Args:\n- `order_id` UUID of the order\n\n# Returns:\n- `OrderUser` see Schema for details.","operationId":"get_user_that_created_order","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Order Id"},"name":"order_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderUser"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["order_read"]},{"APIKeyHeader":[]}]}},"/order/webhook_data/{order_id}":{"get":{"tags":["order"],"summary":"Get Webhook Data By Order Id","description":"Get webhook data for an order.\n\n# Permissions:\n- `order_read`\n\n# Args:\n- `order_id` UUID of the order\n\n# Returns:\n- `WebhookFullOrder` see Schema for details.","operationId":"get_webhook_data_by_order_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Order Id"},"name":"order_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookFullOrder"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["order_read"]},{"APIKeyHeader":[]}]}},"/order":{"post":{"tags":["order"],"summary":"Create Order","description":"Creates a new Order\n\n# Permissions:\n- `order_create`\n\n# Args:\n- `order_data (OrderCreate)` See schema for more details on required fields.\n\n    - `subscription_id (UUID)` ID of the subscription to create the order for.\n\n    - `operation (OrderOperationEnum)` Operation to perform on the subscription.\n        - `ACTIVATE` Activates a subscription - *This is taken care of when a new subscription is created.*\n\n        - `SUSPEND` Suspends a subscription\n        - `RESUME` Resumes a suspended subscription\n        - `DISCONNECT` Disconnects a subscription\n        - `MODIFY` Modifies a subscription - This requires a `plan_id` to be provided.\n    - `process_time (datetime | None)` Time to process the order. Defaults to None.\n    - `plan_id (str | None)` ID of the plan to use for the order. Only required on a `MODIFY` order.\n\n# Returns:\n- `Order` see Schema for details.","operationId":"create_order","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["order_create"]},{"APIKeyHeader":[]}]}},"/order/process_order/{order_id}":{"post":{"tags":["order"],"summary":"Process Order","description":"Process an order by ID.\n\n# Permissions:\n- `order_update`\n\n# Args:\n- `order_id` UUID of the order to process\n\n- `process_data` Data for processing the order (see schema)\n\n# Returns:\n- `Order` see Schema for details.","operationId":"process_order","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Order Id"},"name":"order_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["order_update"]},{"APIKeyHeader":[]}]}},"/owners/":{"get":{"tags":["owner"],"summary":"Get Owners","description":"Gets all Owner data","operationId":"get_owners","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Owner"},"type":"array","title":"Response Get Owners"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["owner_read"]},{"APIKeyHeader":[]}]}},"/owner/{id}":{"get":{"tags":["owner"],"summary":"Get Owner By Id","description":"Get Owner data by ID\n\nArgs:\n    id (UUID): Owner ID","operationId":"get_owner_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Owner"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["owner_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["owner"],"summary":"Update Owner","description":"Updates a user\n\nArgs:\n    id (UUID):  Owner ID\n    owner_data (OwnerUpdate): See schema for more details on required fields.","operationId":"update_owner","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OwnerUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Owner"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["owner_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["owner"],"summary":"Delete Owner","description":"Deletes an owner\n\nArgs:\n    id (UUID): Owner ID","operationId":"delete_owner","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["owner_delete"]},{"APIKeyHeader":[]}]}},"/owner":{"post":{"tags":["owner"],"summary":"Create Owner","description":"Creates a new Owner.\n\nArgs:\n    owner_data (OwnerCreate): See schema for more details on required fields.","operationId":"create_owner","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OwnerCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Owner"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["owner_create"]},{"APIKeyHeader":[]}]}},"/permissions/":{"get":{"tags":["permission"],"summary":"Get Permissions","description":"Gets all Permission data","operationId":"get_permissions","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Permission"},"type":"array","title":"Response Get Permissions"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["permission_read"]},{"APIKeyHeader":[]}]}},"/permission/{name}":{"get":{"tags":["permission"],"summary":"Get Permission By Id","description":"Get Permission data by ID\n\nArgs:\n    id (UUID): Permission ID","operationId":"get_permission_by_id","parameters":[{"required":true,"schema":{"type":"string","title":"Name"},"name":"name","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["permission_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["permission"],"summary":"Update Permission","description":"Updates a user\n\nArgs:\n    id (UUID):  Permission ID\n    permission_data (PermissionUpdate): See schema for more details on required fields.","operationId":"update_permission","parameters":[{"required":true,"schema":{"type":"string","title":"Name"},"name":"name","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermissionUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["permission_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["permission"],"summary":"Delete Permission","description":"Deletes an permission\n\nArgs:\n    id (UUID): Permission ID","operationId":"delete_permission","parameters":[{"required":true,"schema":{"type":"string","title":"Name"},"name":"name","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["permission_delete"]},{"APIKeyHeader":[]}]}},"/permission":{"post":{"tags":["permission"],"summary":"Create Permission","description":"Creates a new Permission\n\nArgs:\n    permission_data (PermissionCreate): See schema for more details on required fields.","operationId":"create_permission","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermissionCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["permission_create"]},{"APIKeyHeader":[]}]}},"/plans/":{"get":{"tags":["plan"],"summary":"Get Plans","description":"Gets plans matching the provided query parameters.\n\nArgs:\n    name (str, optional): The name of the plan.\n    is_required (bool, optional): Whether the plan is required.\n    is_active (bool, optional): Whether the plan is active.\n    is_business (bool, optional): Whether the plan is for business.\n    address_id (str, optional): The ID of the address associated with the plan.\n    plan_id (str, optional): The ID of the plan.\n    owner_id (UUID, optional): The ID of the owner associated with the plan.\n    network_id (str, optional): The ID of the network associated with the plan.\n    upload_speed (int, optional): The upload speed of the plan in Mbps.\n    download_speed (int, optional): The download speed of the plan in Mbps.\n    current_user (User): The user requesting the plans. Must have \"plan_read\" scope.\n    session (Session): Database session.\n\nReturns:\n    list[Plan | PlanOut]: The list of plans matching the query. PlanOut objects are returned for non-admin users.","operationId":"get_plans","parameters":[{"required":false,"schema":{"type":"string","title":"Name"},"name":"name","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Is Required"},"name":"is_required","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Is Active"},"name":"is_active","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Is Business"},"name":"is_business","in":"query"},{"required":false,"schema":{"type":"string","title":"Address Id"},"name":"address_id","in":"query"},{"required":false,"schema":{"type":"string","title":"Plan Id"},"name":"plan_id","in":"query"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Owner Id"},"name":"owner_id","in":"query"},{"required":false,"schema":{"type":"string","title":"Network Id"},"name":"network_id","in":"query"},{"required":false,"schema":{"type":"integer","title":"Upload Speed"},"name":"upload_speed","in":"query"},{"required":false,"schema":{"type":"integer","title":"Download Speed"},"name":"download_speed","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"anyOf":[{"$ref":"#/components/schemas/Plan"},{"$ref":"#/components/schemas/PlanOut"}]},"type":"array","title":"Response Get Plans"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["plan_read"]},{"APIKeyHeader":[]}]}},"/plan/{plan_id}":{"get":{"tags":["plan"],"summary":"Get Plan By Id","description":"Gets a plan by ID.\n\nArgs:\n    plan_id (str): The ID of the plan to retrieve.\n    current_user (User): The user requesting the plan. Must have \"plan_read\" scope.\n    session (Session): Database session.\n\nReturns:\n    Plan | PlanOut: The requested plan. PlanOut is returned for non-admin users.","operationId":"get_plan_by_id","parameters":[{"required":true,"schema":{"type":"string","title":"Plan Id"},"name":"plan_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["plan_read"]},{"APIKeyHeader":[]}]}},"/plan":{"post":{"tags":["plan"],"summary":"Create Plan","description":"Creates a new plan.\n\nArgs:\n    plan_data (PlanCreate): The data for the new plan. See schema for required fields.\n    current_user (User): The user creating the plan. Must have \"plan_create\" scope.\n    session (Session): Database session.\n\nReturns:\n    Plan: The created plan.","operationId":"create_plan","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlanCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Plan"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["plan_create"]},{"APIKeyHeader":[]}]}},"/plan/{id}":{"put":{"tags":["plan"],"summary":"Update Plan","description":"Updates an existing plan.\n\nArgs:\n    plan_id (str): The ID of the plan to update.\n    plan_data (PlanUpdate): The data to update the plan with. See schema for updatable fields.\n    current_user (User): The user updating the plan. Must have \"plan_update\" scope.\n    session (Session): Database session.\n\nReturns:\n    Plan: The updated plan.","operationId":"update_plan","parameters":[{"required":true,"schema":{"type":"string","title":"Plan Id"},"name":"plan_id","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlanUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Plan"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["plan_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["plan"],"summary":"Delete Plan","description":"Deletes an existing plan.\n\nArgs:\n    plan_id (str): The ID of the plan to delete.\n    current_user (User): The user deleting the plan. Must have \"plan_delete\" scope.\n    session (Session): Database session.\n\nReturns:\n    JSONResponse: JSON response indicating the plan was deleted successfully.","operationId":"delete_plan","parameters":[{"required":true,"schema":{"type":"string","title":"Plan Id"},"name":"plan_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["plan_delete"]},{"APIKeyHeader":[]}]}},"/reports/network_stats/{network_id}":{"get":{"tags":["reports"],"summary":"Get Network Stats","description":"Get statistics for a network.\n\nArgs:\n    network_id (str): ID of the network to get statistics for\n    session (Session): Database session\n    current_user (User): Authenticated user with 'report_read' scope\n\nReturns:\n    NetworkStats: Statistics including:\n        total_non_billable_subs (int): Non-billable subscribers\n        total_billable_subs (int): Billable subscribers\n        total_subs (int): Total subscribers\n        total_address_count (int): Total address count\n        total_available_address_count (int): Available addresses\n        take_rate (float): Take rate percentage\n        plan_stats (List[PlanStat]): Stats per plan\n        signups_per_day (List[DayCount]): Daily signups\n        installs_per_day (List[DayCount]): Daily installs\n        disconnections_per_day (List[DayCount]): Daily disconnections\n        cancelations_per_day (List[DayCount]): Daily cancellations\n\nFunctionality:\n    Check if user has access to network\n    Get data for each stat\n    Create Network Stats object\n    Return Network Stats object","operationId":"get_network_stats","parameters":[{"required":true,"schema":{"type":"string","title":"Network Id"},"name":"network_id","in":"path"},{"required":false,"schema":{"type":"string","title":"Isp Id"},"name":"isp_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkStats"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["report_read"]},{"APIKeyHeader":[]}]}},"/reports/isp_stats/{network_id}":{"get":{"tags":["reports"],"summary":"Get Isp Stats","description":"Get ISP stats for a network for a given month and year.\n\nRequires the user to have 'report_read' scope access.\nChecks the user has access to the given network based on their scope.\n\nParameters:\n    network_id: ID of the network to get stats for\n    month: Month to get stats for (default is current month)\n    year: Year to get stats for (default is current year)\n\nReturns:\n    IspStatsOut object containing the stats","operationId":"get_isp_stats","parameters":[{"required":true,"schema":{"type":"string","title":"Network Id"},"name":"network_id","in":"path"},{"required":false,"schema":{"type":"integer","title":"Month","default":9},"name":"month","in":"query"},{"required":false,"schema":{"type":"integer","title":"Year","default":2023},"name":"year","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IspStatsOut"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["report_read"]},{"APIKeyHeader":[]}]}},"/roles/":{"get":{"tags":["role"],"summary":"Get Roles","description":"Gets all Role data","operationId":"get_roles","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Role"},"type":"array","title":"Response Get Roles"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["role_read"]},{"APIKeyHeader":[]}]}},"/role/{role_id}":{"get":{"tags":["role"],"summary":"Get Role By Id","description":"Get Role data by ID\n\nArgs:\n    id (UUID): Role ID","operationId":"get_role_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Role Id"},"name":"role_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["role_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["role"],"summary":"Update Role","description":"Updates a user\n\nArgs:\n    id (UUID):  Role ID\n    role_data (RoleUpdate): See schema for more details on required fields.","operationId":"update_role","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Role Id"},"name":"role_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoleUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["role_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["role"],"summary":"Delete Role","description":"Deletes an role\n\nArgs:\n    id (UUID): Role ID","operationId":"delete_role","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Role Id"},"name":"role_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["role_delete"]},{"APIKeyHeader":[]}]}},"/role":{"post":{"tags":["role"],"summary":"Create Role","description":"Creates a new Role\n\nArgs:\n    role_data (RoleCreate): See schema for more details on required fields.","operationId":"create_role","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoleCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["role_create"]},{"APIKeyHeader":[]}]}},"/schedule/available/{install_type}":{"get":{"tags":["schedule"],"summary":"Get Available Times","description":"Gets available time slots for an install type. If a subscription is passed in to be rescheduled, the range\nof dates will start from the date of the initial appointment.\n\n# Permissions:\n- `schedule_read`\n\n# Args:\n- `install_type (InstallType)` The type of install, either \"basic\" or \"advanced\".\n\n- `subscription_id (UUID, optional)` The ID of the subscription to get available times for.\n\n# Returns:\n- `AvailableTimes` see schema for details.","operationId":"get_available_times","parameters":[{"required":true,"schema":{"$ref":"#/components/schemas/InstallType"},"name":"install_type","in":"path"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AvailableTimes"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["schedule_read"]},{"APIKeyHeader":[]}]}},"/schedule/appointments":{"get":{"tags":["schedule"],"summary":"Get All Appointments","description":"Gets all appointments.\n\n# Permissions:\n- `schedule_read`\n\n# Args:\n- `location_id (str, optional)` Id of location schedule.\n\n- `email (str, optional)` Email of client.\n- `last_name (str, optional)` Last name of client.\n- `phone (str, optional)` Phone number of client.\n- `service_id (str, optional)` Id of service used to create appointment.\n- `resource_id (str, optional)` Id of technician.\n- `start_date (str, optional)` Format YYYY-MM-DD.\n- `end_date (str, optional)` Format YYYY-MM-DD.\n- `status (str, optional)` Appointment Status: `IN`, `RE`, `BK`, `CN`, `RS`.\n- `page (int, optional)` Page number.\n- `size (int, optional)` Limit number of items returned.\n\n# Returns:\n- `AppointmentResponse` see schema for details.","operationId":"get_all_appointments","parameters":[{"description":"Id of location schedule","required":false,"schema":{"type":"string","title":"Location Id","description":"Id of location schedule"},"name":"location_id","in":"query"},{"description":"Email of client","required":false,"schema":{"type":"string","title":"Email","description":"Email of client"},"name":"email","in":"query"},{"description":"Last name of client","required":false,"schema":{"type":"string","title":"Last Name","description":"Last name of client"},"name":"last_name","in":"query"},{"description":"Phone number of client","required":false,"schema":{"type":"string","title":"Phone","description":"Phone number of client"},"name":"phone","in":"query"},{"description":"Id of service used to create appointment","required":false,"schema":{"type":"string","title":"Service Id","description":"Id of service used to create appointment"},"name":"service_id","in":"query"},{"description":"Id of technician","required":false,"schema":{"type":"string","title":"Resource Id","description":"Id of technician"},"name":"resource_id","in":"query"},{"description":"Format YYYY-MM-DD","required":false,"schema":{"type":"string","title":"Start Date","description":"Format YYYY-MM-DD"},"name":"start_date","in":"query"},{"description":"Format YYYY-MM-DD","required":false,"schema":{"type":"string","title":"End Date","description":"Format YYYY-MM-DD"},"name":"end_date","in":"query"},{"description":"Appt. Status: IN, RE, BK, CN, RS","required":false,"schema":{"type":"string","title":"Status","description":"Appt. Status: IN, RE, BK, CN, RS"},"name":"status","in":"query"},{"description":"Page number","required":false,"schema":{"type":"integer","title":"Page","description":"Page number"},"name":"page","in":"query"},{"description":"Limit number of items returned","required":false,"schema":{"type":"integer","title":"Size","description":"Limit number of items returned"},"name":"size","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppointmentResponse"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["schedule_read"]},{"APIKeyHeader":[]}]}},"/schedule/appointment":{"get":{"tags":["schedule"],"summary":"Get Appointment","description":"Gets an appointment.\n\n# Permissions:\n- `schedule_read`\n\n# Args:\n- `appointment_id (str)` Id of appointment.\n\n- `subscription_id (UUID)` Id of subscription.\n\n# Returns:\n- `Appointment` see schema for details.","operationId":"get_appointment","parameters":[{"required":false,"schema":{"type":"string","title":"Appointment Id"},"name":"appointment_id","in":"query"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Appointment"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["schedule_read"]},{"APIKeyHeader":[]}]}},"/schedule/{install_type}/{subscription_id}":{"post":{"tags":["schedule"],"summary":"Schedule Appointment","description":"Schedules an appointment for an installation. Drop must be approved before scheduling.\n\n# Permissions:\n- `schedule_create`\n\n# Args:\n- `install_type (InstallType)` The type of install, either `basic` or `advanced`.\n\n- `subscription_id (UUID)` The ID of the subscription to schedule an install for.\n- `input (TimeSlot)` The requested time slot for the install. See schema for details.\n\n# Returns:\n- `Appointment` see schema for details.","operationId":"schedule_appointment","parameters":[{"required":true,"schema":{"$ref":"#/components/schemas/InstallType"},"name":"install_type","in":"path"},{"required":true,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/app__models__schedule__TimeSlot"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Appointment"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"409":{"description":"Drop must be approved before scheduling"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["schedule_create"]},{"APIKeyHeader":[]}]}},"/subscriptions":{"get":{"tags":["subscription"],"summary":"Get Subscriptions","description":"Get a list of subscriptions.\n\n# Permissions:\n- `subscription_read`\n\n# Args:\n- `email (str | None, optional)` Email of the subscriber\n\n- `phone (str | None, optional)` Phone number of the subscriber\n- `name (str | None, optional)` Name of the subscriber. Searches first and last names.\n- `address_id (UUID | None, optional)` Id of address associated with subscription.\n- `plan_id (str | None, optional)` Id of plan on subscription.\n- `isp_id (UUID | None, optional)` Id of ISP associated with subscription.\n- `network_id (str | None, optional)` Id of network associated with subscription.\n- `zone_id (UUID | None, optional)` Id of zone associated with address.\n- `owner_id (UUID | None, optional)` Id of network owner\n- `operator_id (UUID | None, optional)` Id of operator in network\n- `sub_status (SubscriptionStatusEnum | None, optional)` Status of subscription\n- `show_cancelled (bool, optional)` Show cancelled subscriptions\n- `show_disconnected (bool, optional)` Show disconnected subscriptions\n\n# Returns:\n- `Page[SubscriptionOut]` Paginated list of subscription data.","operationId":"get_subscriptions","parameters":[{"description":"Email of the user","required":false,"schema":{"type":"string","title":"Email","description":"Email of the user"},"name":"email","in":"query"},{"description":"Phone number of the user","required":false,"schema":{"type":"string","title":"Phone","description":"Phone number of the user"},"name":"phone","in":"query"},{"description":"Name of the user","required":false,"schema":{"type":"string","title":"Name","description":"Name of the user"},"name":"name","in":"query"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Address Id"},"name":"address_id","in":"query"},{"required":false,"schema":{"type":"string","title":"Plan Id"},"name":"plan_id","in":"query"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Isp Id"},"name":"isp_id","in":"query"},{"required":false,"schema":{"type":"string","title":"Network Id"},"name":"network_id","in":"query"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Zone Id"},"name":"zone_id","in":"query"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Owner Id"},"name":"owner_id","in":"query"},{"required":false,"schema":{"type":"string","format":"uuid","title":"Operator Id"},"name":"operator_id","in":"query"},{"required":false,"schema":{"$ref":"#/components/schemas/SubscriptionStatusEnum"},"name":"sub_status","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Show Canceled","default":false},"name":"show_canceled","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Show Disconnected","default":false},"name":"show_disconnected","in":"query"},{"required":false,"schema":{"type":"integer","minimum":1.0,"title":"Page","default":1},"name":"page","in":"query"},{"required":false,"schema":{"type":"integer","maximum":100.0,"minimum":1.0,"title":"Size","default":50},"name":"size","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_SubscriptionOut_"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["subscription_read"]},{"APIKeyHeader":[]}]}},"/subscription":{"get":{"tags":["subscription"],"summary":"Get Subscription By Id","description":"Get Subscription id or by appointment id. **Requires either subscription_id or appointment_id**\n\n# Permissions:\n- `subscription_read`\n\n# Args:\n- `subscription_id (UUID)` Id of subscription to retrieve.\n\n- `appointment_id (str)` Id of appointment tied to subscription.\n\n# Returns:\n- `SubscriptionOut` see schema for details.","operationId":"get_subscription_by_id","parameters":[{"required":false,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"query"},{"required":false,"schema":{"type":"string","title":"Appointment Id"},"name":"appointment_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionOut"}}}},"400":{"description":"Bad Request","example":"Must provide subscription_id or appointment_id"},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["subscription_read"]},{"APIKeyHeader":[]}]},"post":{"tags":["subscription"],"summary":"Create Subscription","description":"Creates a new subscription.\n\n# Permissions:\n- `subscription_create`\n\n# Args:\n- `subscription_data (SubscriptionCreate)` Subscription data to create a new subscription. See schema for details\n\n\n# Returns:\n- `Subscription` see schema for details.","operationId":"create_subscription","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["subscription_create"]},{"APIKeyHeader":[]}]}},"/subscription/{subscription_id}":{"put":{"tags":["subscription"],"summary":"Update Subscription","description":"Updates an subscription.\n\n# Permissions:\n- `subscription_update`\n\n# Args:\n- `id (UUID)` Subscription ID\n\n- `subscription_data (SubscriptionUpdate)` see schema for details.\n\n# Returns:\n- `Subscription` see schema for details.","operationId":"update_subscription","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["subscription_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["subscription"],"summary":"Delete Subscription","description":"Deletes a subscription.\n\n# Permissions:\n- `subscription_delete`\n\n# Args:\n- `id (UUID)` Subscription ID\n\n# Returns:\n- `Response` see schema for details.","operationId":"delete_subscription","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Subscription Id"},"name":"subscription_id","in":"path"}],"responses":{"200":{"description":"Successful Response"},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["subscription_delete"]},{"APIKeyHeader":[]}]}},"/users/":{"get":{"tags":["user"],"summary":"Get Users","description":"Gets all User data","operationId":"get_users","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/User"},"type":"array","title":"Response Get Users"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["user_read"]},{"APIKeyHeader":[]}]}},"/user/{user_id}":{"get":{"tags":["user"],"summary":"Get User By Id","description":"Get User data by ID\n\nArgs:\n    id (UUID): User ID","operationId":"get_user_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"User Id"},"name":"user_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["user_read"]},{"APIKeyHeader":[]}]},"delete":{"tags":["user"],"summary":"Delete User","description":"Deletes an user\n\nArgs:\n    id (UUID): User ID","operationId":"delete_user","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"User Id"},"name":"user_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["user_delete"]},{"APIKeyHeader":[]}]}},"/user/invite/{user_email}/{role_id}":{"post":{"tags":["user"],"summary":"Send Email Invite To User","description":"Creates a new User\n\nArgs:\n    user_data (UserCreate): See schema for more details on required fields.","operationId":"send_email_invite_to_user","parameters":[{"required":true,"schema":{"type":"string","title":"User Email"},"name":"user_email","in":"path"},{"required":true,"schema":{"type":"string","format":"uuid","title":"Role Id"},"name":"role_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["user_create"]},{"APIKeyHeader":[]}]}},"/user":{"post":{"tags":["user"],"summary":"Create User","operationId":"create_user","parameters":[{"required":true,"schema":{"type":"string","title":"Token"},"name":"token","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreateIn"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/user/":{"put":{"tags":["user"],"summary":"Update User","description":"Updates a user\nArgs:\n    id (UUID):  User ID\n    user_data (UserUpdate): See schema for more details on required fields.","operationId":"update_user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["user_update"]},{"APIKeyHeader":[]}]}},"/webhooks/":{"get":{"tags":["webhook"],"summary":"Get Webhooks","description":"Get all webhooks\n\n# Permissions:\n- `webhook_read`\n\n# Returns:\n- `WebhookOut` see Schema for details.","operationId":"get_webhooks","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/WebhookOut"},"type":"array","title":"Response Get Webhooks"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["webhook_read"]},{"APIKeyHeader":[]}]}},"/webhook/{id}":{"get":{"tags":["webhook"],"summary":"Get Webhook By Id","description":"Get Webhook data by ID\n\n# Permissions:\n- `webhook_read`\n\n# Args:\n- `id (UUID)` Webhook ID\n\n# Returns:\n- `WebhookOut` see Schema for details.","operationId":"get_webhook_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookOut"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["webhook_read"]},{"APIKeyHeader":[]}]},"delete":{"tags":["webhook"],"summary":"Delete Webhook","description":"Deletes an webhook\n\n# Permissions:\n- `webhook_delete`\n\n# Args:\n- `id (UUID)` Webhook ID\n\n# Returns:\n- `JSONResponse` with `ok` set to `True`","operationId":"delete_webhook","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["webhook_delete"]},{"APIKeyHeader":[]}]}},"/webhook":{"post":{"tags":["webhook"],"summary":"Upsert Webhook","description":"Creates a new Webhook\n\n# Permissions:\n- `webhook_create`\n\n- `webhook_update`\n\n# Args:\n- `webhook_data (WebhookCreate)` See schema for more details on required fields.\n\n# Returns:\n- `WebhookOut` see Schema for details.","operationId":"upsert_webhook","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookOut"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["webhook_create","webhook_update"]},{"APIKeyHeader":[]}]}},"/zones/":{"get":{"tags":["zone"],"summary":"Get Zones","description":"Gets all Zone data","operationId":"get_zones","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Zone"},"type":"array","title":"Response Get Zones"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}}},"security":[{"OAuth2PasswordBearer":["zone_read"]},{"APIKeyHeader":[]}]}},"/zone/{id}":{"get":{"tags":["zone"],"summary":"Get Zone By Id","description":"Get Zone data by ID\n\nArgs:\n    id (UUID): Zone ID","operationId":"get_zone_by_id","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Zone"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["zone_read"]},{"APIKeyHeader":[]}]},"put":{"tags":["zone"],"summary":"Update Zone","description":"Updates a user\n\nArgs:\n    id (UUID):  Zone ID\n    zone_data (ZoneUpdate): See schema for more details on required fields.","operationId":"update_zone","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ZoneUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Zone"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["zone_update"]},{"APIKeyHeader":[]}]},"delete":{"tags":["zone"],"summary":"Delete Zone","description":"Deletes an zone\n\nArgs:\n    id (UUID): Zone ID","operationId":"delete_zone","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["zone_delete"]},{"APIKeyHeader":[]}]}},"/zone":{"post":{"tags":["zone"],"summary":"Create Zone","description":"Creates a new Zone\n\nArgs:\n    zone_data (ZoneCreate): See schema for more details on required fields.","operationId":"create_zone","requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ZoneCreate"},"type":"array","title":"Zone Data"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Zone"},"type":"array","title":"Response Create Zone"}}}},"400":{"description":"Invalid data provided","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"401":{"description":"User unauthorized to use route","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"404":{"description":"No item found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpExceptionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":["zone_create"]},{"APIKeyHeader":[]}]}},"/ping":{"get":{"tags":["ping"],"summary":"Pong","operationId":"pong","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":["ping"]},{"APIKeyHeader":[]}]}}},"components":{"schemas":{"Address":{"properties":{"line1":{"type":"string","title":"Line1"},"line2":{"type":"string","title":"Line2"},"city":{"type":"string","title":"City"},"state":{"$ref":"#/components/schemas/StateEnum"},"zip":{"type":"string","title":"Zip"},"lat":{"type":"string","title":"Lat"},"lon":{"type":"string","title":"Lon"},"type":{"$ref":"#/components/schemas/AddressType"},"for_testing":{"type":"boolean","title":"For Testing","default":false},"in_service":{"type":"boolean","title":"In Service","default":false},"is_verified":{"type":"boolean","title":"Is Verified","default":false},"ready":{"type":"boolean","title":"Ready","default":false},"has_ont":{"type":"boolean","title":"Has Ont","default":false},"id":{"type":"string","format":"uuid","title":"Id"},"zone_id":{"type":"string","format":"uuid","title":"Zone Id"},"drop_id":{"type":"string","title":"Drop Id"},"install_type":{"type":"string","title":"Install Type"},"notes":{"type":"string","title":"Notes"}},"type":"object","required":["line1","city","state","zip","type"],"title":"Address","description":"Address model with database table.\n\nExtends AddressBase and adds:\n\nAttributes:\n    id (UUID): Primary key\n    type (AddressType): Address type enum\n    zone_id (UUID): Foreign key to Zone\n    zone (Zone): Relationship to Zone\n    drop_id (str): Foreign key to Drop\n    drop (Drop): Relationship to Drop\n    drop_logs (List[DropLog]): Relationship to drop logs\n    install_type (str): Type of install\n    notes (str): Additional notes"},"AddressCreate":{"properties":{"line1":{"type":"string","title":"Line1"},"line2":{"type":"string","title":"Line2"},"city":{"type":"string","title":"City"},"state":{"$ref":"#/components/schemas/StateEnum"},"zip":{"type":"string","title":"Zip","example":"84078"},"lat":{"type":"string","title":"Lat","example":""},"lon":{"type":"string","title":"Lon","example":""},"type":{"$ref":"#/components/schemas/AddressType"},"for_testing":{"type":"boolean","title":"For Testing","default":false},"in_service":{"type":"boolean","title":"In Service","default":false},"is_verified":{"type":"boolean","title":"Is Verified","default":false},"ready":{"type":"boolean","title":"Ready","default":false},"has_ont":{"type":"boolean","title":"Has Ont","default":false},"zone_id":{"type":"string","format":"uuid","title":"Zone Id"},"install_type":{"$ref":"#/components/schemas/AddressInstallType"},"notes":{"type":"string","title":"Notes"}},"type":"object","required":["line1","city","state","zip","type","zone_id"],"title":"AddressCreate","description":"Pydantic model for creating a new Address.\n\nExtends AddressBase and adds:\n\nAttributes:\n    zip (str): ZIP code\n    lat (str, optional): Latitude coordinate\n    lon (str, optional): Longitude coordinate\n    zone_id (UUID): ID of associated Zone\n    install_type (AddressInstallType, optional): Type of install\n    notes (str, optional): Additional notes"},"AddressInstallType":{"type":"string","enum":["basic","advanced","custom"],"title":"AddressInstallType","description":"An enumeration."},"AddressType":{"type":"string","enum":["Residential","Business","Municipal","Mdu"],"title":"AddressType","description":"An enumeration."},"AddressUpdate":{"properties":{"in_service":{"type":"boolean","title":"In Service"},"install_type":{"$ref":"#/components/schemas/AddressInstallType"},"notes":{"type":"string","title":"Notes"}},"type":"object","title":"AddressUpdate","description":"Model for updating an existing Address record.\n\nAttributes:\n    in_service (bool, optional): Updates in_service status\n    install_type (AddressInstallType, optional): Updates install type\n    notes (str, optional): Updates notes"},"ApiKey":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"prefix":{"type":"string","title":"Prefix"},"created":{"type":"string","format":"date-time","title":"Created","default":"2023-09-26T22:34:19.311144+00:00"},"key_hash":{"type":"string","title":"Key Hash"},"user_id":{"type":"string","format":"uuid","title":"User Id"}},"type":"object","required":["id","prefix","key_hash","user_id"],"title":"ApiKey"},"Appointment":{"properties":{"id":{"type":"string","title":"Id"},"location_id":{"type":"string","title":"Location Id"},"business_name":{"type":"string","title":"Business Name"},"calendar_id":{"type":"string","title":"Calendar Id"},"service_id":{"type":"string","title":"Service Id"},"service_name":{"type":"string","title":"Service Name"},"resource_id":{"type":"string","title":"Resource Id"},"resource_name":{"type":"string","title":"Resource Name"},"resource_email":{"type":"string","title":"Resource Email"},"customer_id":{"type":"string","title":"Customer Id"},"rescheduled_id":{"type":"string","title":"Rescheduled Id"},"create_date":{"type":"string","title":"Create Date"},"start_date_time":{"type":"string","title":"Start Date Time"},"end_date_time":{"type":"string","title":"End Date Time"},"date":{"type":"string","title":"Date"},"time":{"type":"integer","title":"Time"},"duration":{"type":"integer","title":"Duration"},"status":{"type":"string","title":"Status"},"confirmation_number":{"type":"string","title":"Confirmation Number"},"confirmed":{"type":"boolean","title":"Confirmed"},"email":{"type":"string","title":"Email"},"lastname":{"type":"string","title":"Lastname"},"firstname":{"type":"string","title":"Firstname"},"phone":{"type":"string","title":"Phone"},"notes":{"type":"string","title":"Notes"},"last_modified_on":{"type":"string","title":"Last Modified On"},"last_modified_by":{"type":"string","title":"Last Modified By"},"custom_fields":{"$ref":"#/components/schemas/AppointmentCustomFields"},"audit_trail":{"items":{"$ref":"#/components/schemas/AppointmentLogs"},"type":"array","title":"Audit Trail"}},"type":"object","required":["id","location_id","business_name","calendar_id","service_id","service_name","resource_id","resource_name","resource_email","customer_id","rescheduled_id","create_date","start_date_time","end_date_time","date","time","duration","status","confirmation_number","confirmed","email","lastname","firstname","phone","last_modified_on","last_modified_by","custom_fields","audit_trail"],"title":"Appointment"},"AppointmentCustomFields":{"properties":{"field1":{"type":"string","title":"Field1"},"field2":{"type":"string","title":"Field2"},"field3":{"type":"string","title":"Field3"}},"type":"object","title":"AppointmentCustomFields"},"AppointmentLogs":{"properties":{"id":{"type":"string","title":"Id"},"modified_on":{"type":"string","format":"date-time","title":"Modified On"},"modified_by":{"type":"string","title":"Modified By"},"modification_type":{"type":"string","title":"Modification Type"},"status_before":{"type":"string","title":"Status Before"},"status_after":{"type":"string","title":"Status After"},"notes_before":{"type":"string","title":"Notes Before"},"notes_after":{"type":"string","title":"Notes After"}},"type":"object","required":["id","modified_on","modified_by","modification_type","status_before","status_after"],"title":"AppointmentLogs"},"AppointmentResponse":{"properties":{"appointments":{"items":{"$ref":"#/components/schemas/Appointment"},"type":"array","title":"Appointments"},"size":{"type":"integer","title":"Size"},"total":{"type":"integer","title":"Total"},"pages":{"type":"integer","title":"Pages"},"page":{"type":"integer","title":"Page"}},"type":"object","required":["appointments","size","total","pages","page"],"title":"AppointmentResponse"},"AvailableTimes":{"properties":{"serviceId":{"type":"string","title":"Serviceid"},"serviceName":{"type":"string","title":"Servicename"},"startDate":{"type":"string","title":"Startdate"},"endDate":{"type":"string","title":"Enddate"},"availableTimes":{"items":{"$ref":"#/components/schemas/app__external__fuse__models__TimeSlot"},"type":"array","title":"Availabletimes","default":[]}},"type":"object","required":["serviceId","serviceName","startDate","endDate"],"title":"AvailableTimes"},"Body_user_login":{"properties":{"grant_type":{"type":"string","pattern":"password","title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"type":"string","title":"Client Id"},"client_secret":{"type":"string","title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_user_login"},"DayCount":{"properties":{"date":{"type":"string","title":"Date"},"count":{"type":"integer","title":"Count"}},"type":"object","required":["date","count"],"title":"DayCount","description":"Model representing count data for a single day.\n\nUsed in NetworkStats for daily metrics like signups, installs etc.\n\nAttributes:\n    date (str): Date in YYYY-MM-DD format\n    count (int): Count for the date"},"Device":{"properties":{"serial_number":{"type":"string","title":"Serial Number"},"id":{"type":"string","format":"uuid","title":"Id"},"address_id":{"type":"string","format":"uuid","title":"Address Id"},"type_id":{"type":"string","format":"uuid","title":"Type Id"}},"type":"object","required":["serial_number","address_id","type_id"],"title":"Device"},"DeviceCreate":{"properties":{},"type":"object","title":"DeviceCreate"},"DeviceReport":{"properties":{"device_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Device Id"},"port_details":{"anyOf":[{"$ref":"#/components/schemas/PortDetails"},{"$ref":"#/components/schemas/SmxErrorMessage"}],"title":"Port Details"},"port_status":{"anyOf":[{"$ref":"#/components/schemas/PortStatus"},{"$ref":"#/components/schemas/SmxErrorMessage"}],"title":"Port Status"},"ont_details":{"anyOf":[{"$ref":"#/components/schemas/OntDetails"},{"$ref":"#/components/schemas/SmxErrorMessage"}],"title":"Ont Details"},"alarms":{"anyOf":[{"items":{"$ref":"#/components/schemas/OntAlarm"},"type":"array"},{"$ref":"#/components/schemas/SmxErrorMessage"}],"title":"Alarms"},"dhcp_stats":{"anyOf":[{"$ref":"#/components/schemas/DhcpStats"},{"$ref":"#/components/schemas/SmxErrorMessage"}],"title":"Dhcp Stats"},"vlan":{"anyOf":[{"type":"string"},{"$ref":"#/components/schemas/SmxErrorMessage"}],"title":"Vlan"},"dhcp_leases":{"anyOf":[{"items":{"$ref":"#/components/schemas/DhcpLeases"},"type":"array"},{"$ref":"#/components/schemas/SmxErrorMessage"}],"title":"Dhcp Leases"},"subscription":{"$ref":"#/components/schemas/SubscriptionBase"}},"type":"object","required":["device_id","port_details","port_status","ont_details","alarms","dhcp_stats","vlan","dhcp_leases","subscription"],"title":"DeviceReport","description":"Combine all the data for a device and subscriber to be returned to the client."},"DeviceUpdate":{"properties":{},"type":"object","title":"DeviceUpdate"},"DhcpLeases":{"properties":{"ip":{"type":"string","title":"Ip","default":""},"mask":{"type":"string","title":"Mask","default":""},"mac":{"type":"string","title":"Mac"},"dhcp_server":{"type":"string","title":"Dhcp Server","default":""},"gateway":{"type":"string","title":"Gateway","default":""},"up_down_state":{"type":"string","title":"Up Down State","default":""},"lease_expires":{"type":"string","format":"date-time","title":"Lease Expires"},"lease_renewed":{"type":"string","format":"date-time","title":"Lease Renewed"},"lease_first_acquired":{"type":"string","format":"date-time","title":"Lease First Acquired"}},"type":"object","required":["mac"],"title":"DhcpLeases"},"DhcpStats":{"properties":{"lease_acquisitions":{"type":"integer","title":"Lease Acquisitions"},"lease_renewals":{"type":"integer","title":"Lease Renewals"},"lease_timeouts":{"type":"integer","title":"Lease Timeouts"},"discovers":{"type":"integer","title":"Discovers"},"offers":{"type":"integer","title":"Offers"},"requests":{"type":"integer","title":"Requests"},"acks":{"type":"integer","title":"Acks"},"nacks":{"type":"integer","title":"Nacks"},"releases":{"type":"integer","title":"Releases"},"declines":{"type":"integer","title":"Declines"},"informs":{"type":"integer","title":"Informs"},"force_renews":{"type":"integer","title":"Force Renews"},"malformed_packet_drops":{"type":"integer","title":"Malformed Packet Drops"},"options82_present_drops":{"type":"integer","title":"Options82 Present Drops"},"lease_limit_drops":{"type":"integer","title":"Lease Limit Drops"},"ack_with_mac_collisions":{"type":"integer","title":"Ack With Mac Collisions"}},"type":"object","required":["lease_acquisitions","lease_renewals","lease_timeouts","discovers","offers","requests","acks","nacks","releases","declines","informs","force_renews","malformed_packet_drops","options82_present_drops","lease_limit_drops","ack_with_mac_collisions"],"title":"DhcpStats"},"Drop":{"properties":{"full_address":{"type":"string","title":"Full Address"},"city":{"type":"string","title":"City"},"state":{"type":"string","title":"State"},"zip":{"type":"string","title":"Zip"},"lat":{"type":"string","title":"Lat"},"lon":{"type":"string","title":"Lon"},"approved":{"type":"boolean","title":"Approved","default":false},"type":{"type":"string","title":"Type"},"install_date":{"type":"string","format":"date-time","title":"Install Date"},"sent_to_eng":{"type":"string","format":"date-time","title":"Sent To Eng"},"id":{"type":"string","title":"Id"}},"type":"object","required":["full_address","city","state","zip","lat","lon","type","id"],"title":"Drop","description":"Model for the Drop table in the database.\n\nArgs:\n    DropBase (SQLModel): Base object for the a drop\n    table (bool, optional): Determines that the model is used as a table in the database. Defaults to True."},"DropIn":{"properties":{"id":{"type":"string","title":"Id"},"lat":{"type":"string","title":"Lat"},"lon":{"type":"string","title":"Lon"},"full_address":{"type":"string","title":"Full Address"},"city":{"type":"string","title":"City"},"state":{"$ref":"#/components/schemas/StateEnum"},"zip":{"type":"string","title":"Zip"},"type":{"$ref":"#/components/schemas/AddressType"},"address_ids":{"items":{"type":"string","format":"uuid"},"type":"array","title":"Address Ids"}},"type":"object","required":["id","lat","lon","full_address","city","state","zip","type","address_ids"],"title":"DropIn"},"DropIsp":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"}},"type":"object","required":["id","name"],"title":"DropIsp"},"DropLogEventEnum":{"type":"string","enum":["eng_approve","eng_deny","isp_propose","isp_revert"],"title":"DropLogEventEnum","description":"An enumeration."},"DropLogItem":{"properties":{"actions":{"items":{"$ref":"#/components/schemas/DropLogOut"},"type":"array","title":"Actions"},"isp":{"$ref":"#/components/schemas/DropIsp"}},"type":"object","required":["actions"],"title":"DropLogItem"},"DropLogOut":{"properties":{"lat":{"type":"string","title":"Lat"},"lon":{"type":"string","title":"Lon"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp"},"status":{"type":"string","title":"Status"},"additional_cost":{"type":"string","title":"Additional Cost"},"notes":{"type":"string","title":"Notes"},"type":{"type":"string","title":"Type"},"id":{"type":"string","format":"uuid","title":"Id"},"drop_id":{"type":"string","title":"Drop Id"},"address_id":{"type":"string","format":"uuid","title":"Address Id"},"user_details":{"$ref":"#/components/schemas/UserDetails"}},"type":"object","required":["lat","lon","status","type","id","drop_id","address_id","user_details"],"title":"DropLogOut","description":"Base model for drop model. Contains ubiquitous information.\n\nlat (str): Current latitude of the proposed or approved drop.\nlon (str): Current longitude of the proposed or approved drop.\ntimestamp (datetime): Date and time when the log was created.\nstatus (str): Status of the drop. pending_isp, pending_eng, denied, accepted, or approved.\nadditional_cost (str): If an additional cost is needed for the drop to be approved.\nnotes (str, optional): Additional notes for the drop. Default is an empty string.\ntype (str): The type of log. Original, proposed, or response."},"FullDropOut":{"properties":{"drop_logs":{"items":{"$ref":"#/components/schemas/DropLogItem"},"type":"array","title":"Drop Logs"},"address":{"$ref":"#/components/schemas/Address"},"drop":{"$ref":"#/components/schemas/Drop"},"proposed_coord":{"$ref":"#/components/schemas/LatLon"}},"type":"object","required":["drop_logs","address","drop","proposed_coord"],"title":"FullDropOut"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"HttpExceptionResponse":{"properties":{"detail":{"type":"string","title":"Detail"}},"type":"object","required":["detail"],"title":"HttpExceptionResponse"},"InstallType":{"type":"string","enum":["basic","advanced"],"title":"InstallType","description":"Enum for service type"},"Isp":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"},"service_template":{"type":"string","title":"Service Template"},"id":{"type":"string","format":"uuid","title":"Id"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"Isp"},"IspCreate":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"},"service_template":{"type":"string","title":"Service Template"},"networks":{"items":{"type":"string"},"type":"array","title":"Networks","default":[]}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"IspCreate"},"IspStats":{"properties":{"isp_id":{"type":"string","format":"uuid","title":"Isp Id"},"isp_name":{"type":"string","title":"Isp Name"},"plans":{"items":{"$ref":"#/components/schemas/PlanResults"},"type":"array","title":"Plans","default":[]}},"type":"object","required":["isp_id","isp_name"],"title":"IspStats","description":"Statistics model for an ISP.\n\nAttributes:\n    isp_id (UUID): ID of the ISP\n    isp_name (str): Name of the ISP\n    plans (List[PlanResults]): List of subscription count results\n    for each plan offered by the ISP"},"IspStatsOut":{"properties":{"month":{"type":"integer","title":"Month"},"year":{"type":"integer","title":"Year"},"isp_stats":{"items":{"$ref":"#/components/schemas/IspStats"},"type":"array","title":"Isp Stats","default":[]}},"type":"object","required":["month","year"],"title":"IspStatsOut","description":"Output model for ISP statistics by month and year.\n\nAttributes:\n    month (int): The month the statistics are for.\n    year (int): The year the statistics are for.\n    isp_stats (List[IspStats]): List of IspStats models, one for each ISP."},"IspUpdate":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"},"service_template":{"type":"string","title":"Service Template"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"IspUpdate"},"LatLon":{"properties":{"lat":{"type":"string","title":"Lat"},"lon":{"type":"string","title":"Lon"}},"type":"object","required":["lat","lon"],"title":"LatLon"},"Network":{"properties":{"name":{"type":"string","title":"Name"},"server":{"type":"string","title":"Server","default":"LAB"},"id":{"type":"string","title":"Id"},"owner_id":{"type":"string","format":"uuid","title":"Owner Id"},"operator_id":{"type":"string","format":"uuid","title":"Operator Id"},"model":{"$ref":"#/components/schemas/NetworkModelEnum"},"landing_url":{"type":"string","title":"Landing Url"},"webhook_id":{"type":"string","format":"uuid","title":"Webhook Id"}},"type":"object","required":["name","id","model"],"title":"Network"},"NetworkCreate":{"properties":{"name":{"type":"string","title":"Name"},"server":{"allOf":[{"$ref":"#/components/schemas/ServerEnum"}],"default":"LAB"},"id":{"type":"string","title":"Id"},"owner_id":{"type":"string","format":"uuid","title":"Owner Id"},"operator_id":{"type":"string","format":"uuid","title":"Operator Id"},"model":{"$ref":"#/components/schemas/NetworkModelEnum"}},"type":"object","required":["name","id","owner_id","operator_id","model"],"title":"NetworkCreate"},"NetworkIspLink":{"properties":{"network_id":{"type":"string","title":"Network Id"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"},"is_active":{"type":"boolean","title":"Is Active","default":false}},"type":"object","title":"NetworkIspLink"},"NetworkIspLinkDelete":{"properties":{"network_id":{"type":"string","title":"Network Id"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"}},"type":"object","required":["network_id","isp_id"],"title":"NetworkIspLinkDelete"},"NetworkModelEnum":{"type":"string","enum":["SUBSCRIPTION","GATEWAY"],"title":"NetworkModelEnum","description":"An enumeration."},"NetworkStats":{"properties":{"total_non_billable_subs":{"type":"integer","title":"Total Non Billable Subs"},"total_billable_subs":{"type":"integer","title":"Total Billable Subs"},"total_subs":{"type":"integer","title":"Total Subs"},"total_address_count":{"type":"integer","title":"Total Address Count"},"total_available_address_count":{"type":"integer","title":"Total Available Address Count"},"take_rate":{"type":"number","title":"Take Rate"},"plan_stats":{"items":{"$ref":"#/components/schemas/PlanStat"},"type":"array","title":"Plan Stats"},"signups_per_day":{"items":{"$ref":"#/components/schemas/DayCount"},"type":"array","title":"Signups Per Day"},"installs_per_day":{"items":{"$ref":"#/components/schemas/DayCount"},"type":"array","title":"Installs Per Day"},"disconnections_per_day":{"items":{"$ref":"#/components/schemas/DayCount"},"type":"array","title":"Disconnections Per Day"},"cancelations_per_day":{"items":{"$ref":"#/components/schemas/DayCount"},"type":"array","title":"Cancelations Per Day"}},"type":"object","required":["total_non_billable_subs","total_billable_subs","total_subs","total_address_count","total_available_address_count","take_rate","plan_stats","signups_per_day","installs_per_day","disconnections_per_day","cancelations_per_day"],"title":"NetworkStats","description":"Statistics model for a network.\n\nAttributes:\n    total_non_billable_subs (int): Total non-billable subscribers\n    total_billable_subs (int): Total billable subscribers\n    total_subs (int): Total subscribers\n    total_address_count (int): Total address count\n    total_available_address_count (int): Total available addresses\n    take_rate (float): Take rate percentage\n    plan_stats (List[PlanStat]): Stats per plan\n    signups_per_day (List[DayCount]): Daily signups\n    installs_per_day (List[DayCount]): Daily installs\n    disconnections_per_day (List[DayCount]): Daily disconnections\n    cancelations_per_day (List[DayCount]): Daily cancellations"},"NetworkUpdate":{"properties":{"name":{"type":"string","title":"Name"},"server":{"$ref":"#/components/schemas/ServerEnum"},"webhook_data":{"$ref":"#/components/schemas/NetworkWebhook"}},"type":"object","title":"NetworkUpdate"},"NetworkWebhook":{"properties":{"name":{"type":"string","title":"Name"},"url":{"type":"string","maxLength":65536,"minLength":1,"format":"uri","title":"Url"}},"type":"object","required":["name","url"],"title":"NetworkWebhook"},"OntAlarm":{"properties":{"severity":{"$ref":"#/components/schemas/SeverityEnum"},"description":{"type":"string","title":"Description"},"probable_cause":{"type":"string","title":"Probable Cause"},"service_affecting":{"type":"string","title":"Service Affecting"},"is_acked":{"type":"string","title":"Is Acked"},"receive_time_string":{"type":"string","title":"Receive Time String"}},"type":"object","required":["severity","description","probable_cause","service_affecting","is_acked","receive_time_string"],"title":"OntAlarm"},"OntDetails":{"properties":{"operational_status":{"type":"string","title":"Operational Status"},"bip_errors_up":{"type":"integer","title":"Bip Errors Up"},"bip_errors_down":{"type":"integer","title":"Bip Errors Down"},"ont_light_levels":{"type":"number","title":"Ont Light Levels"},"olt_light_levels":{"type":"number","title":"Olt Light Levels"}},"type":"object","required":["operational_status","bip_errors_up","bip_errors_down","ont_light_levels","olt_light_levels"],"title":"OntDetails"},"Operator":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"},"id":{"type":"string","format":"uuid","title":"Id"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"Operator"},"OperatorCreate":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"OperatorCreate"},"OperatorUpdate":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"OperatorUpdate"},"Order":{"properties":{"created_date":{"type":"string","format":"date-time","title":"Created Date"},"process_date":{"type":"string","format":"date-time","title":"Process Date"},"completed_date":{"type":"string","format":"date-time","title":"Completed Date"},"for_testing":{"type":"boolean","title":"For Testing","default":false},"id":{"type":"string","format":"uuid","title":"Id"},"plan_id":{"type":"string","title":"Plan Id"},"subscription_id":{"type":"string","format":"uuid","title":"Subscription Id"},"status":{"allOf":[{"$ref":"#/components/schemas/OrderStatusEnum"}],"default":"PENDING"},"operation":{"$ref":"#/components/schemas/OrderOperationEnum"},"scheduled_task_id":{"type":"string","title":"Scheduled Task Id"},"created_by":{"type":"string","format":"uuid","title":"Created By"}},"type":"object","required":["operation"],"title":"Order","description":"An order for a subscription.\n\nAttributes:\n    id (UUID): Unique ID for the order\n    plan_id (str): Foreign key to the new plan if this is a change plan order\n    subscription_id (UUID): Foreign key to the subscription this order is for\n    status (OrderStatusEnum): Status of the order\n    operation (OrderOperationEnum): Type of operation for the order\n    scheduled_task_id (str): ID of scheduled task to process order\n    created_by (UUID): Foreign key to the user who created the order\n    tasks (List[Task]): Related list of tasks for this order"},"OrderCreate":{"properties":{"subscription_id":{"type":"string","format":"uuid","title":"Subscription Id"},"operation":{"$ref":"#/components/schemas/OrderOperationEnum"},"process_time":{"type":"string","format":"date-time","title":"Process Time"},"plan_id":{"type":"string","title":"Plan Id"}},"type":"object","required":["subscription_id","operation"],"title":"OrderCreate","description":"Model for creating a new order.\n\nAttributes:\n    subscription_id (UUID): ID of the subscription this order is for\n    operation (OrderOperationEnum): Type of operation for this order\n    process_time (datetime, optional): Scheduled time to process order\n    plan_id (str, optional): New plan ID if this is a change plan order"},"OrderOperationEnum":{"type":"string","enum":["ACTIVATE","SUSPEND","DEACTIVATE","DISCONNECT","RESUME","MODIFY","MOVE"],"title":"OrderOperationEnum","description":"An enumeration."},"OrderStatusEnum":{"type":"string","enum":["SUCCESS","PROCESSING","FAILED","PENDING","CANCELLED","WAITING"],"title":"OrderStatusEnum","description":"An enumeration."},"OrderUser":{"properties":{"user_id":{"type":"string","format":"uuid","title":"User Id"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"type":"string","title":"Email"},"organization_name":{"type":"string","title":"Organization Name"}},"type":"object","required":["user_id","first_name","last_name","email","organization_name"],"title":"OrderUser","description":"Model containing user details related to an order.\n\nAttributes:\n    user_id (UUID): ID of the user\n    first_name (str): First name of the user\n    last_name (str): Last name of the user\n    email (str): Email address of the user\n    organization_name (str): Name of the organization the user belongs to\n\nThis is used to return relevant user details associated with an order."},"Owner":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"},"id":{"type":"string","format":"uuid","title":"Id"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"Owner"},"OwnerCreate":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"OwnerCreate"},"OwnerUpdate":{"properties":{"name":{"type":"string","title":"Name"},"primary_contact_name":{"type":"string","title":"Primary Contact Name"},"primary_contact_phone":{"type":"string","title":"Primary Contact Phone"},"primary_contact_email":{"type":"string","title":"Primary Contact Email"},"secondary_contact_name":{"type":"string","title":"Secondary Contact Name"},"secondary_contact_phone":{"type":"string","title":"Secondary Contact Phone"},"secondary_contact_email":{"type":"string","title":"Secondary Contact Email"}},"type":"object","required":["name","primary_contact_name","primary_contact_phone","primary_contact_email"],"title":"OwnerUpdate"},"Page_Address_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Address"},"type":"array","title":"Items"},"total":{"type":"integer","minimum":0.0,"title":"Total"},"page":{"type":"integer","minimum":1.0,"title":"Page"},"size":{"type":"integer","minimum":1.0,"title":"Size"},"pages":{"type":"integer","minimum":0.0,"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[Address]"},"Page_SubscriptionOut_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/SubscriptionOut"},"type":"array","title":"Items"},"total":{"type":"integer","minimum":0.0,"title":"Total"},"page":{"type":"integer","minimum":1.0,"title":"Page"},"size":{"type":"integer","minimum":1.0,"title":"Size"},"pages":{"type":"integer","minimum":0.0,"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[SubscriptionOut]"},"Permission":{"properties":{"name":{"type":"string","title":"Name"}},"type":"object","required":["name"],"title":"Permission"},"PermissionCreate":{"properties":{"name":{"type":"string","title":"Name"}},"type":"object","required":["name"],"title":"PermissionCreate"},"PermissionUpdate":{"properties":{"name":{"type":"string","title":"Name"}},"type":"object","required":["name"],"title":"PermissionUpdate"},"Plan":{"properties":{"is_required":{"type":"boolean","title":"Is Required"},"is_active":{"type":"boolean","title":"Is Active"},"is_business":{"type":"boolean","title":"Is Business","default":false},"id":{"type":"string","title":"Id"},"network_id":{"type":"string","title":"Network Id"},"policy_map_name":{"type":"string","title":"Policy Map Name"}},"type":"object","required":["is_required","is_active","id","policy_map_name"],"title":"Plan"},"PlanCreate":{"properties":{"is_required":{"type":"boolean","title":"Is Required"},"is_active":{"type":"boolean","title":"Is Active"},"is_business":{"type":"boolean","title":"Is Business","default":false},"policy_map_name":{"type":"string","title":"Policy Map Name"},"network_id":{"type":"string","title":"Network Id"}},"type":"object","required":["is_required","is_active","policy_map_name","network_id"],"title":"PlanCreate"},"PlanOut":{"properties":{"is_required":{"type":"boolean","title":"Is Required"},"is_active":{"type":"boolean","title":"Is Active"},"is_business":{"type":"boolean","title":"Is Business","default":false},"id":{"type":"string","title":"Id"},"network_id":{"type":"string","title":"Network Id"},"upload_speed":{"type":"integer","title":"Upload Speed"},"download_speed":{"type":"integer","title":"Download Speed"}},"type":"object","required":["is_required","is_active","id","network_id","upload_speed","download_speed"],"title":"PlanOut"},"PlanResults":{"properties":{"plan_id":{"type":"string","title":"Plan Id"},"previous_month_count":{"type":"integer","title":"Previous Month Count"},"current_month_count":{"type":"integer","title":"Current Month Count"},"average_month_count":{"type":"integer","title":"Average Month Count"}},"type":"object","required":["plan_id"],"title":"PlanResults","description":"Model for tracking plan subscription counts over time.\n\nUsed in IspStats to represent subscription counts for a plan over the\nprevious month, current month, and calculated average.\n\nAttributes:\n    plan_id (str): The plan ID\n    previous_month_count (int | None): Sub count for previous month\n    current_month_count (int | None): Sub count for current month\n    average_month_count (int | None): Average sub count over time"},"PlanStat":{"properties":{"plan_id":{"type":"string","title":"Plan Id"},"total_non_billable_subs":{"type":"integer","title":"Total Non Billable Subs"},"total_billable_subs":{"type":"integer","title":"Total Billable Subs"},"total_subs":{"type":"integer","title":"Total Subs"}},"type":"object","required":["plan_id","total_non_billable_subs","total_billable_subs","total_subs"],"title":"PlanStat","description":"Statistics for a specific plan.\n\nAttributes:\n    plan_id (str): The ID of the plan.\n    total_non_billable_subs (int): The total number of non-billable subscribers on this plan.\n    total_billable_subs (int): The total number of billable subscribers on this plan.\n    total_subs (int): The total number of subscribers on this plan."},"PlanUpdate":{"properties":{},"type":"object","title":"PlanUpdate"},"PortDetails":{"properties":{"port_link":{"type":"string","title":"Port Link"},"operation_status":{"type":"string","title":"Operation Status"},"power_state":{"type":"string","title":"Power State"},"duplex":{"type":"string","title":"Duplex"}},"type":"object","required":["port_link","operation_status","power_state","duplex"],"title":"PortDetails"},"PortStatus":{"properties":{"device_name":{"type":"string","title":"Device Name"},"admin_status":{"type":"string","title":"Admin Status"},"oper_status":{"type":"string","title":"Oper Status"},"ont_id":{"type":"string","title":"Ont Id"},"ont_port_id":{"type":"string","title":"Ont Port Id"},"power_status":{"type":"string","title":"Power Status"},"mac_address":{"type":"string","title":"Mac Address"},"mtu":{"type":"string","title":"Mtu"},"speed":{"type":"string","title":"Speed"},"oam_link_status":{"type":"string","title":"Oam Link Status"},"duplex":{"type":"string","title":"Duplex"},"oam_loopback":{"type":"string","title":"Oam Loopback"}},"type":"object","required":["device_name","admin_status","oper_status","ont_id","ont_port_id","power_status","mac_address","mtu","speed","oam_link_status","duplex","oam_loopback"],"title":"PortStatus"},"ProposedDropData":{"properties":{"accepted":{"type":"boolean","title":"Accepted","default":false},"lat":{"type":"string","title":"Lat"},"lon":{"type":"string","title":"Lon"},"notes":{"type":"string","title":"Notes"}},"type":"object","title":"ProposedDropData","description":"Data required for an ISP to determine what will happen with a drop.\n\nArgs:\n    SQLModel (SQLModel): Parent class containing methods.\n\nRaises:\n    ValueError: If accepted is false with no lat or lon provided.\n\naccepted (bool): If ISP accepts original drop location. Default is False\nlat (str | None): Proposed lat of drop. Raises Value error if not provided and accepted is False\nlon (str | None): Proposed lon of drop. Raises Value error if not provided and accepted is False\nnotes (str | None): Drop notes for when the subscription is provided"},"Role":{"properties":{"name":{"type":"string","title":"Name"},"id":{"type":"string","format":"uuid","title":"Id"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"},"operator_id":{"type":"string","format":"uuid","title":"Operator Id"},"owner_id":{"type":"string","format":"uuid","title":"Owner Id"}},"type":"object","required":["name"],"title":"Role"},"RoleCreate":{"properties":{"name":{"type":"string","title":"Name"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"},"operator_id":{"type":"string","format":"uuid","title":"Operator Id"},"owner_id":{"type":"string","format":"uuid","title":"Owner Id"},"permissions":{"items":{"type":"string"},"type":"array","title":"Permissions"}},"type":"object","required":["name","permissions"],"title":"RoleCreate"},"RoleUpdate":{"properties":{"name":{"type":"string","title":"Name"},"permissions":{"items":{"type":"string"},"type":"array","title":"Permissions"}},"type":"object","required":["name","permissions"],"title":"RoleUpdate"},"ScopeEnum":{"type":"string","enum":["ADMIN","OWNER","OPERATOR","ISP","SUBSCRIBER"],"title":"ScopeEnum","description":"Enumeration of possible user permission scopes.\n\nMembers:\n    ADMIN - Administrator scope with access to all features\n    OWNER - Owner scope for owner users\n    OPERATOR - Operator scope for operator users\n    ISP - ISP scope for ISP users\n    SUBSCRIBER - Subscriber scope for subscriber users"},"ServerEnum":{"enum":["LAB","STRATA","OPEN_ACCESS"],"title":"ServerEnum","description":"An enumeration."},"SeverityEnum":{"enum":["CRITICAL","MAJOR","MINOR"],"title":"SeverityEnum","description":"An enumeration."},"SmxErrorMessage":{"properties":{"status_code":{"type":"integer","title":"Status Code"}},"type":"object","required":["status_code"],"title":"SmxErrorMessage"},"StateEnum":{"type":"string","enum":["UT","AL","AK","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","VT","VA","WA","WV","WI","WY"],"title":"StateEnum","description":"This class is an enumeration of the possible State's names"},"Subscription":{"properties":{"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"type":"string","title":"Email"},"phone_number":{"type":"string","title":"Phone Number"},"owner_external_id":{"type":"string","title":"Owner External Id"},"isp_external_id":{"type":"string","title":"Isp External Id"},"id":{"type":"string","format":"uuid","title":"Id"},"address_id":{"type":"string","format":"uuid","title":"Address Id"},"plan_id":{"type":"string","title":"Plan Id"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"},"port_id":{"type":"string","format":"uuid","title":"Port Id"},"status":{"allOf":[{"$ref":"#/components/schemas/SubscriptionStatusEnum"}],"default":"Pending Scheduling"},"created_date":{"type":"string","format":"date-time","title":"Created Date"},"schedule_date":{"type":"string","format":"date-time","title":"Schedule Date"},"install_date":{"type":"string","format":"date-time","title":"Install Date"},"activate_date":{"type":"string","format":"date-time","title":"Activate Date"},"disconnect_date":{"type":"string","format":"date-time","title":"Disconnect Date"},"appointment_id":{"type":"string","title":"Appointment Id"}},"type":"object","required":["first_name","last_name","email","phone_number"],"title":"Subscription","description":"A subscription model that inherits from SubscriptionBase.\nThis model is used as a table in a database.\n\nAttributes:\n    id (UUID): The unique ID of the subscription.\n    address_id (UUID): The foreign key to the address.\n    plan_id (str): The foreign key to the plan.\n    isp_id (UUID): The foreign key to the ISP.\n    port_id (UUID): The foreign key to the port.\n    status (SubscriptionStatusEnum): The status of the subscription.\n    created_date (datetime): The date the subscription was created.\n    schedule_date (datetime | None): The date the subscription is scheduled.\n    install_date (datetime | None): The date the subscription was installed.\n    activate_date (datetime | None): The date the subscription was activated.\n    disconnect_date (datetime | None): The date the subscription was disconnected.\n    appointment_id (str | None): The ID of the appointment.\n    address (\"Address\"): The related address object.\n    plan (\"Plan\"): The related plan object."},"SubscriptionBase":{"properties":{"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"type":"string","title":"Email"},"phone_number":{"type":"string","title":"Phone Number"},"owner_external_id":{"type":"string","title":"Owner External Id"},"isp_external_id":{"type":"string","title":"Isp External Id"}},"type":"object","required":["first_name","last_name","email","phone_number"],"title":"SubscriptionBase","description":"A base subscription model.\n\nAttributes:\n    first_name (str): The first name of the subscriber.\n    last_name (str): The last name of the subscriber.\n    email (str): The email address of the subscriber.\n    phone_number (str): The phone number of the subscriber.\n    owner_external_id (str | None): The external ID for the owner.\n    isp_external_id (str | None): The external ID for the ISP."},"SubscriptionCreate":{"properties":{"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"type":"string","title":"Email"},"phone_number":{"type":"string","title":"Phone Number"},"owner_external_id":{"type":"string","title":"Owner External Id"},"isp_external_id":{"type":"string","title":"Isp External Id"},"id":{"type":"string","format":"uuid","title":"Id"},"address_id":{"type":"string","format":"uuid","title":"Address Id"},"plan_id":{"type":"string","title":"Plan Id"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"},"drop_data":{"allOf":[{"$ref":"#/components/schemas/ProposedDropData"}],"title":"Drop Data","description":"If an address has a drop, it must be accepted, or a new drop proposed"},"install_type":{"$ref":"#/components/schemas/AddressInstallType"}},"type":"object","required":["first_name","last_name","email","phone_number","address_id","plan_id"],"title":"SubscriptionCreate","description":"Model for creating a new subscription.\n\nAttributes:\n    id (UUID): Unique ID for the subscription.\n    address_id (UUID): ID of the related address.\n    plan_id (str): ID of the related plan.\n    isp_id (UUID): Optional ID of the related ISP.\n    drop_data (ProposedDropData): Optional proposed drop data.\n    install_type (AddressInstallType): Optional install type."},"SubscriptionOut":{"properties":{"subscription":{"$ref":"#/components/schemas/Subscription"},"address":{"$ref":"#/components/schemas/Address"},"plan":{"$ref":"#/components/schemas/Plan"},"isp":{"$ref":"#/components/schemas/Isp"}},"type":"object","required":["subscription","address","plan","isp"],"title":"SubscriptionOut","description":"Output model for subscription data and related models.\n\nAttributes:\n    subscription (Subscription): The subscription object.\n    address (Address): The related address object.\n    plan (Plan): The related plan object.\n    isp (Isp): The related ISP object."},"SubscriptionStatusEnum":{"type":"string","enum":["Pending Scheduling","Pending Install","Active","Suspended","Canceled","Disconnected","On Hold"],"title":"SubscriptionStatusEnum","description":"An enumeration."},"SubscriptionUpdate":{"properties":{},"type":"object","title":"SubscriptionUpdate"},"UpdateDropEvent":{"properties":{"lat":{"type":"string","title":"Lat"},"lon":{"type":"string","title":"Lon"},"notes":{"type":"string","title":"Notes"}},"type":"object","title":"UpdateDropEvent"},"User":{"properties":{"email":{"type":"string","title":"Email"},"mobile":{"type":"string","title":"Mobile"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"id":{"type":"string","format":"uuid","title":"Id"},"scope":{"$ref":"#/components/schemas/ScopeEnum"},"role_id":{"type":"string","format":"uuid","title":"Role Id"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"},"owner_id":{"type":"string","format":"uuid","title":"Owner Id"},"operator_id":{"type":"string","format":"uuid","title":"Operator Id"}},"type":"object","required":["email","mobile","first_name","last_name","scope"],"title":"User","description":"User model representing a user in the system.\n\nExtends UserBase and adds database fields and relationships.\n\nAttributes:\n    id (UUID): Unique ID for the user\n    scope (ScopeEnum): The scope of permissions for the user\n    role_id (UUID): Foreign key to the user's Role\n    isp_id (UUID): Optional foreign key to the user's ISP\n    owner_id (UUID): Optional foreign key to the user's Owner\n    operator_id (UUID): Optional foreign key to the user's Operator\n\n    role (Role): Relationship to the user's Role\n    isp (Isp): Relationship to the user's ISP\n    operator (Operator): Relationship to the user's Operator\n    owner (Owner): Relationship to the user's Owner\n\nMethods:\n    permissions(): Gets the user's permissions based on Role\n    is_isp(): Checks if the user has an isp_id\n    is_operator(): Checks if the user has an operator_id\n    is_owner(): Checks if the user has an owner_id"},"UserCreateIn":{"properties":{"mobile":{"type":"string","title":"Mobile"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"password":{"type":"string","title":"Password"}},"type":"object","required":["mobile","first_name","last_name","password"],"title":"UserCreateIn","description":"Model for creating a new user.\n\nAttributes:\n    mobile (str): The user's mobile phone number\n    first_name (str): The user's first name\n    last_name (str): The user's last name\n    password (str): The user's password"},"UserDetails":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"company":{"type":"string","title":"Company"}},"type":"object","required":["id","name","company"],"title":"UserDetails"},"UserUpdate":{"properties":{"email":{"type":"string","title":"Email"},"mobile":{"type":"string","title":"Mobile"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"id":{"type":"string","format":"uuid","title":"Id"}},"type":"object","required":["email","mobile","first_name","last_name","id"],"title":"UserUpdate","description":"Model for updating a user.\n\nExtends the UserBase model and adds:\n\nAttributes:\n    id (UUID): The ID of the user to update"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WebhookAddressDetails":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"type":{"type":"string","title":"Type"},"line1":{"type":"string","title":"Line1"},"line2":{"type":"string","title":"Line2"},"city":{"type":"string","title":"City"},"state":{"$ref":"#/components/schemas/StateEnum"},"zip":{"type":"string","title":"Zip"},"lat":{"type":"number","title":"Lat"},"lon":{"type":"number","title":"Lon"}},"type":"object","required":["id","type","line1","city","state","zip"],"title":"WebhookAddressDetails"},"WebhookCreate":{"properties":{"name":{"type":"string","title":"Name"},"url":{"type":"string","title":"Url"},"active":{"type":"boolean","title":"Active"},"id":{"type":"string","format":"uuid","title":"Id"},"networks":{"items":{"type":"string"},"type":"array","title":"Networks"}},"type":"object","required":["name","url","active","networks"],"title":"WebhookCreate"},"WebhookFullOrder":{"properties":{"order":{"$ref":"#/components/schemas/WebhookOrder"},"address":{"$ref":"#/components/schemas/WebhookAddressDetails"},"plan":{"$ref":"#/components/schemas/WebhookPlanDetails"},"subscription":{"$ref":"#/components/schemas/WebhookSubscriptionDetails"}},"type":"object","required":["order","address","plan","subscription"],"title":"WebhookFullOrder"},"WebhookOrder":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"status":{"$ref":"#/components/schemas/OrderStatusEnum"},"operation":{"$ref":"#/components/schemas/OrderOperationEnum"},"created_date":{"type":"string","format":"date-time","title":"Created Date"},"process_date":{"type":"string","format":"date-time","title":"Process Date"},"completed_date":{"type":"string","format":"date-time","title":"Completed Date"}},"type":"object","required":["id","status","operation","created_date","process_date"],"title":"WebhookOrder"},"WebhookOut":{"properties":{"name":{"type":"string","title":"Name"},"url":{"type":"string","title":"Url"},"active":{"type":"boolean","title":"Active"},"id":{"type":"string","format":"uuid","title":"Id"},"networks":{"items":{"type":"string"},"type":"array","title":"Networks"}},"type":"object","required":["name","url","active","id","networks"],"title":"WebhookOut","description":"Webhook response model with additional details.\n\nExtends WebhookBase and adds:\n\nAttributes:\n    id (UUID): Webhook ID\n    networks (List[str]): List of associated network ids"},"WebhookPlanDetails":{"properties":{"id":{"type":"string","title":"Id"},"download":{"type":"integer","title":"Download"},"upload":{"type":"integer","title":"Upload"},"is_active":{"type":"boolean","title":"Is Active"}},"type":"object","required":["id","download","upload"],"title":"WebhookPlanDetails"},"WebhookSubscriptionDetails":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"type":"string","title":"Email"},"phone_number":{"type":"string","title":"Phone Number"},"network_id":{"type":"string","title":"Network Id"},"status":{"$ref":"#/components/schemas/SubscriptionStatusEnum"},"created_date":{"type":"string","format":"date-time","title":"Created Date"},"schedule_date":{"type":"string","format":"date-time","title":"Schedule Date"},"install_date":{"type":"string","format":"date-time","title":"Install Date"},"disconnect_date":{"type":"string","format":"date-time","title":"Disconnect Date"},"isp_id":{"type":"string","format":"uuid","title":"Isp Id"}},"type":"object","required":["id","first_name","last_name","email","phone_number","network_id","status","created_date","isp_id"],"title":"WebhookSubscriptionDetails"},"Zone":{"properties":{"name":{"type":"string","title":"Name"},"id":{"type":"string","format":"uuid","title":"Id"},"network_id":{"type":"string","title":"Network Id"}},"type":"object","required":["name"],"title":"Zone"},"ZoneCreate":{"properties":{"name":{"type":"string","title":"Name"},"network_id":{"type":"string","title":"Network Id"}},"type":"object","required":["name","network_id"],"title":"ZoneCreate","example":{"name":"Zone 1","network_id":"blackhawk"}},"ZoneUpdate":{"properties":{},"type":"object","title":"ZoneUpdate"},"app__external__fuse__models__TimeSlot":{"properties":{"resourceId":{"type":"string","title":"Resourceid"},"startDateTime":{"type":"string","title":"Startdatetime"},"endDateTime":{"type":"string","title":"Enddatetime"},"date":{"type":"string","title":"Date"},"time":{"type":"integer","title":"Time"},"displayTime":{"type":"string","title":"Displaytime"},"duration":{"type":"integer","title":"Duration"}},"type":"object","required":["resourceId","startDateTime","endDateTime","date","time","displayTime","duration"],"title":"TimeSlot"},"app__models__schedule__TimeSlot":{"properties":{"resourceId":{"type":"string","title":"Resourceid"},"startDateTime":{"type":"string","title":"Startdatetime"},"endDateTime":{"type":"string","title":"Enddatetime"},"date":{"type":"string","title":"Date"},"time":{"type":"integer","title":"Time"},"displayTime":{"type":"string","title":"Displaytime"},"duration":{"type":"integer","title":"Duration"},"notes":{"type":"string","title":"Notes","default":""}},"type":"object","required":["resourceId","startDateTime","endDateTime","date","time","displayTime","duration"],"title":"TimeSlot"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"login"}}},"APIKeyHeader":{"type":"apiKey","in":"header","name":"x-api-key"}}}}